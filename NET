Student#: student12

Command: ssh student@10.50.31.120 -X

Password: password
User Space Sockets

    Stream socket - TCP

    Datagram socket - UDP
RAW Socket used for pcap, takes all traffic
TCPDUMP 
    -A = print payload in ASCII

    -D = list interfaces

    -i = specify capture interface

    -e = print data-link headers

    -X or XX = print payload in HEX and ASCII

Basic TCPDump options

    -w = write to pcap

    -r = read from pcap

    -v, vv, or vvv = verbosity

    -n = no inverse lookups

Logical Operators

    Primitives may be combined using:

        Concatenation: 'and' ( && )

        Alteration: 'or' ( || )

        Negation: 'not' ( ! )

-d, debugger mode, deconstructs what a partiular filter is doing 
xxd -r file-encoded.txt file-decoded.txt decode a file using hex
Ping Sweep in Linux
    for i in {1..254}; do (ping -c 1 172.16.82.$i | grep "bytes from" &) ; done
-Pn for nmap use in tunnels 
-T4 option for use on our network
NETCAT TCP Scan Script
        #!/bin/bash
        echo "Enter network address (e.g. 192.168.0): "
        read net
        echo "Enter starting host range (e.g. 1): "
        read start
        echo "Enter ending host range (e.g. 254): "
        read end
        echo "Enter ports space-delimited (e.g. 21-23 80): "
        read ports
        for ((i=$start; $i<=$end; i++))
        do
            nc -nvzw1 $net.$i $ports 2>&1 | grep -E 'succ|open'
        done
NETCAT UDP Scan Script
        #!/bin/bash
        echo "Enter network address (e.g. 192.168.0): "
        read net
        echo "Enter starting host range (e.g. 1): "
        read start
        echo "Enter ending host range (e.g. 254): "
        read end
        echo "Enter ports space-delimited (e.g. 21-23 80): "
        read ports
        for ((i=$start; $i<=$end; i++))
        do
            nc -nuvzw1 $net.$i $ports 2>&1 | grep -E 'succ|open'
        done
NETCAT Bannar Grab
        nc 172.16.82.106 22 | -u for udp
